{"version":3,"sources":["Album.js"],"names":["define","skylark","langx","noder","widgets","registry","views","items","Album","Widget","inherit","klassName","options","typeProperty","titleProperty","altTextProperty","urlProperty","srcsetProperty","init","el","this","$el","$","mixin","prototype","_itemFactories","setViewMode","view","mode","viewMode","i","length","name","ctor","getItemUrl","item","getItemProperty","getItemTitle","addItems","concat","Array","slice","call","num","trigger","renderItem","callback","type","split","factory","mimeType","Error","element","render","srcset","setAttribute","isRunnable","playItem","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","prop","parseInt","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","undefined","ViewBase","Evented","controlsClass","fullScreen","album","hasControls","that","initOptions","container","on","e","hasClass","removeClass","addClass","close","ItemFactoryBase","setTimeout","func","args","wait","window","apply","installPlugin","pointer","setting","plugins","push","ui"],"mappings":"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","file":"../Album.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils/noder\",\r\n\t\"skylark-utils/widgets\"\r\n], function (skylark, langx, noder, widgets) {\r\n\tvar registry = {\r\n\t\tviews: [],\r\n\t\titems: []\r\n\t};\r\n\tvar Album = widgets.Widget.inherit({\r\n\t\tklassName: \"Album\",\r\n\t\toptions: {\r\n\t\t\t// The list object property (or data attribute) with the object type:\r\n\t\t\ttypeProperty: 'type',\r\n\t\t\t// The list object property (or data attribute) with the object title:\r\n\t\t\ttitleProperty: 'title',\r\n\t\t\t// The list object property (or data attribute) with the object alt text:\r\n\t\t\taltTextProperty: 'alt',\r\n\t\t\t// The list object property (or data attribute) with the object URL:\r\n\t\t\turlProperty: 'href',\r\n\t\t\t// The list object property (or data attribute) with the object srcset URL(s):\r\n\t\t\tsrcsetProperty: 'urlset',\r\n\t\t},\r\n\t\t\r\n\t\t/*\r\n\t\t * @param {Element} el The container element. \r\n\t\t */\r\n\t\tinit: function (el, options) {\r\n\t\t\t//this.overrided(el,options);\t\r\n\t\t\tthis.$el = $(el);\r\n\t\t\tthis.el = this.$el[0];\r\n\t\t\tthis.options = langx.mixin({}, Album.prototype.options, options);\r\n\t\t\tthis._itemFactories = {\r\n\r\n\t\t\t};\r\n\t\t\tthis.items = this.options.items;\r\n\t\t\tthis.setViewMode(this.options.view.mode, this.options.view.options);\r\n\t\t},\r\n\r\n\t\tsetViewMode: function (mode, options) {\r\n\t\t\tthis.viewMode = mode;\r\n\t\t\tfor (var i = 0; i < registry.views.length; i++) {\r\n\t\t\t\tif (registry.views[i].name === mode) {\r\n\t\t\t\t\tthis.view = new registry.views[i].ctor(this, options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemUrl: function (item) {\r\n\t\t\treturn Album.getItemProperty(item, this.options.urlProperty);\r\n\t\t},\r\n\r\n\t\tgetItemTitle: function (item) {\r\n\t\t\treturn Album.getItemProperty(item, this.options.titleProperty);\r\n\t\t},\r\n\r\n\t\taddItems: function (items) {\r\n\t\t\tvar i\r\n\t\t\tif (!items.concat) {\r\n\t\t\t\t// Make a real array out of the items to add:\r\n\t\t\t\titems = Array.prototype.slice.call(items);\r\n\t\t\t}\r\n\t\t\tif (!this.items.concat) {\r\n\t\t\t\t// Make a real array out of the Gallery items:\r\n\t\t\t\tthis.items = Array.prototype.slice.call(this.items);\r\n\t\t\t}\r\n\t\t\tthis.items = this.items.concat(items);\r\n\t\t\tthis.num = this.items.length;\r\n\t\t\tthis.trigger(\"itemsChanged\");\r\n\t\t},\r\n\r\n\t\trenderItem: function (item, callback) {\r\n\t\t\tvar type = item && Album.getItemProperty(item, this.options.typeProperty);\r\n\r\n\t\t\tif (type) {\r\n\t\t\t\ttype = type.split('/')[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (!type) {\r\n\t\t\t\t//throw new Error(\"no type \");\r\n\t\t\t\ttype = \"image\";\r\n\t\t\t}\r\n\r\n\t\t\tvar factory = this._itemFactories[type];\r\n\r\n\t\t\tif (!factory) {\r\n\t\t\t\tfor (var i = 0; i < registry.items.length; i++) {\r\n\t\t\t\t\tif (registry.items[i].mimeType === type) {\r\n\t\t\t\t\t\tfactory = this._itemFactories[type] = new registry.items[i].ctor(this);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!factory) {\r\n\t\t\t\tthrow new Error(\"invalid type:\" + type);\r\n\t\t\t}\r\n\r\n\t\t\tvar element = factory.render(item, callback);\r\n\t\t\tvar srcset = Album.getItemProperty(item, this.options.srcsetProperty)\r\n\t\t\tif (srcset) {\r\n\t\t\t\telement.setAttribute('srcset', srcset)\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Check whether a item is runnable.\r\n\t\t * @param {Object} item The item object\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tisRunnable: function (item) {\r\n\r\n\t\t},\r\n\r\n\t\tplayItem: function (item) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tlangx.mixin(Album, {\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvar ViewBase = Album.ViewBase = langx.Evented.inherit({\r\n\t\tklassName: \"ViewBase\",\r\n\r\n\t\toptions: {\r\n\t\t\t// The class to add when the gallery controls are visible:\r\n\t\t\tcontrolsClass: 'skylarkui-album-controls',\r\n\t\t\t// Defines if the gallery should open in fullscreen mode:\r\n\t\t\tfullScreen: false\r\n\r\n\t\t},\r\n\r\n\t\tinit: function (album, options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.album = album;\r\n\t\t\tthis.initOptions(options);\r\n\t\t\tif (this.options.fullScreen) {\r\n\t\t\t\tnoder.fullScreen(this.container[0]);\r\n\t\t\t}\r\n\t\t\tthis.album.on(\"item.running\", function (e) {\r\n\t\t\t\tif (that.container.hasClass(that.options.controlsClass)) {\r\n\t\t\t\t\thasControls = true\r\n\t\t\t\t\tthat.container.removeClass(that.options.controlsClass);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasControls = false\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.album.on(\"item.running\", function (e) {\r\n\t\t\t\tif (hasControls) {\r\n\t\t\t\t\tthat.container.addClass(that.options.controlsClass);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\t// Create a copy of the prototype options:\r\n\t\t\tthis.options = langx.mixin({}, ViewBase.prototype.options, options);\r\n\t\t},\r\n\r\n\t\tclose: function () {\r\n\t\t\tif (noder.fullScreen() === this.container[0]) {\r\n\t\t\t\tnoder.fullScreen(false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar ItemFactoryBase = Album.ItemFactoryBase = langx.Evented.inherit({\r\n\t\tklassName: \"ItemFactoryBase\",\r\n\r\n\t\toptions: {\r\n\t\t\t// The list object property (or data attribute) with the object type:\r\n\t\t\ttypeProperty: 'type',\r\n\t\t\t// The list object property (or data attribute) with the object title:\r\n\t\t\ttitleProperty: 'title',\r\n\t\t\t// The list object property (or data attribute) with the object alt text:\r\n\t\t\taltTextProperty: 'alt',\r\n\t\t\t// The list object property (or data attribute) with the object URL:\r\n\t\t\turlProperty: 'href',\r\n\t\t\t// The list object property (or data attribute) with the object srcset URL(s):\r\n\t\t\tsrcsetProperty: 'urlset',\r\n\t\t},\r\n\r\n\t\tinit: function (album, options) {\r\n\t\t\tthis.album = album;\r\n\t\t\tthis.initOptions(options);\r\n\t\t},\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\t// Create a copy of the prototype options:\r\n\t\t\tthis.options = langx.mixin({}, ItemFactoryBase.prototype.options, options);\r\n\t\t},\r\n\r\n\t\tsetTimeout: function (func, args, wait) {\r\n\t\t\tvar that = this\r\n\t\t\treturn (\r\n\t\t\t\tfunc &&\r\n\t\t\t\twindow.setTimeout(function () {\r\n\t\t\t\t\tfunc.apply(that, args || [])\r\n\t\t\t\t}, wait || 0)\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: Album.getNestedProperty,\r\n\r\n\t\tgetDataProperty: Album.getDataProperty,\r\n\r\n\t\tgetItemProperty: Album.getItemProperty\r\n\t});\r\n\r\n\tAlbum.installPlugin = function (pointer, setting) {\r\n\t\tvar plugins = registry[pointer];\r\n\t\tif (!plugins) {\r\n\t\t\tthrow new Error(\"Invalid paramerter!\");\r\n\t\t}\r\n\t\tplugins.push(setting);\r\n\t};\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\treturn ui.Album = Album;\r\n});"]}