{"version":3,"sources":["Album.js"],"names":["define","skylark","langx","noder","widgets","registry","views","items","Album","Widget","inherit","klassName","options","typeProperty","titleProperty","altTextProperty","urlProperty","srcsetProperty","init","el","this","$el","$","mixin","prototype","_itemFactories","setViewMode","view","mode","viewMode","i","length","name","ctor","getItemUrl","item","getItemProperty","getItemTitle","addItems","concat","Array","slice","call","num","trigger","renderItem","callback","type","split","factory","mimeType","Error","element","render","srcset","setAttribute","isRunnable","playItem","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","prop","parseInt","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","undefined","ViewBase","Evented","controlsClass","fullScreen","album","hasControls","that","initOptions","container","on","e","hasClass","removeClass","addClass","close","ItemFactoryBase","setTimeout","func","args","wait","window","apply","installPlugin","pointer","setting","plugins","push","ui"],"mappings":"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","file":"../Album.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/widgets\"\r\n], function(skylark, langx, noder, widgets) {\r\n\tvar registry = {\r\n\t\tviews : [],\r\n\t\titems : []\r\n\t};\r\n\r\n\tvar Album = widgets.Widget.inherit({\r\n\t\tklassName : \"Album\",\r\n\r\n\t    options : {\r\n\t\t \r\n \t      // The list object property (or data attribute) with the object type:\r\n\t      typeProperty: 'type',\r\n\t      // The list object property (or data attribute) with the object title:\r\n\t      titleProperty: 'title',\r\n\t      // The list object property (or data attribute) with the object alt text:\r\n\t      altTextProperty: 'alt',\r\n\t      // The list object property (or data attribute) with the object URL:\r\n\t      urlProperty: 'href',\r\n\t      // The list object property (or data attribute) with the object srcset URL(s):\r\n\t      srcsetProperty: 'urlset',\t    \t\r\n\t    },\r\n\r\n\t\t/*\r\n\t\t * @param {Element} el The container element. \r\n\t\t */\r\n\t\tinit : function(el,options) {\r\n\t\t\t//this.overrided(el,options);\t\r\n\t\t\tthis.$el = $(el);\r\n\t\t\tthis.el = this.$el[0];\r\n\t\t\tthis.options = langx.mixin({},Album.prototype.options,options);\r\n\t\t\tthis._itemFactories = {\r\n\r\n\t\t\t};\r\n\t\t\tthis.items = this.options.items;\r\n\t\t\tthis.setViewMode(this.options.view.mode,this.options.view.options);\r\n\t\t},\r\n\r\n\t\tsetViewMode : function(mode,options) {\r\n\t\t\tthis.viewMode = mode;\r\n      \t\tfor (var i =0 ;i<registry.views.length;i++) {\r\n      \t\t\tif (registry.views[i].name === mode) {\r\n      \t\t\t\tthis.view = new registry.views[i].ctor(this,options);\r\n      \t\t\t\tbreak;\r\n      \t\t\t}\r\n      \t\t}\r\n\t\t},\r\n\r\n\t\tgetItemUrl : function(item) {\r\n\t\t\treturn Album.getItemProperty(item,this.options.urlProperty);\r\n\t\t},\r\n\r\n\t\tgetItemTitle : function(item) {\r\n\t\t\treturn Album.getItemProperty(item,this.options.titleProperty);\r\n\t\t},\r\n\r\n\t    addItems: function (items) {\r\n\t      var i\r\n\t      if (!items.concat) {\r\n\t        // Make a real array out of the items to add:\r\n\t        items = Array.prototype.slice.call(items);\r\n\t      }\r\n\t      if (!this.items.concat) {\r\n\t        // Make a real array out of the Gallery items:\r\n\t        this.items = Array.prototype.slice.call(this.items);\r\n\t      }\r\n\t      this.items = this.items.concat(items);\r\n\t      this.num = this.items.length;\r\n\t      this.trigger(\"itemsChanged\");\r\n\t    },\r\n\r\n\t    renderItem : function(item,callback) {\r\n\t\t      var type = item && Album.getItemProperty(item, this.options.typeProperty);\r\n\r\n\t\t      if (type) {\r\n\t\t      \ttype = type.split('/')[0];\r\n\t\t      }\r\n\r\n\t\t      if (!type) {\r\n\t\t      \t//throw new Error(\"no type \");\r\n\t\t      \ttype = \"image\";\r\n\t\t      }\r\n\r\n\t      \tvar factory = this._itemFactories[type];\r\n\r\n\t      \tif (!factory) {\r\n\t      \t\tfor (var i =0 ;i<registry.items.length;i++) {\r\n\t      \t\t\tif (registry.items[i].mimeType === type) {\r\n\t      \t\t\t\tfactory = this._itemFactories[type] = new registry.items[i].ctor(this);\r\n\t      \t\t\t\tbreak;\r\n\t      \t\t\t}\r\n\t      \t\t}\r\n\t      \t}\r\n\r\n\t      \tif (!factory) {\r\n\t      \t\tthrow new Error (\"invalid type:\" + type);\r\n\t      \t}\r\n\t\t    \r\n\t\t    var element = factory.render(item,callback);\r\n\t\t    var srcset = Album.getItemProperty(item, this.options.srcsetProperty)\r\n\t\t    if (srcset) {\r\n\t\t      element.setAttribute('srcset', srcset)\r\n\t\t    }\r\n\t\t    return element;\r\n\t    },\r\n\r\n\t    /*\r\n\t     * Check whether a item is runnable.\r\n\t     * @param {Object} item The item object\r\n\t     * @return {Boolean}\r\n\t     */\r\n\t    isRunnable : function(item) {\r\n\r\n\t    },\r\n\r\n\t    playItem : function(item) {\r\n\r\n\t    }\r\n\r\n\t});\r\n\r\n\r\n\tlangx.mixin(Album,{\r\n\t    getNestedProperty: function (obj, property) {\r\n\t      property.replace(\r\n\t        // Matches native JavaScript notation in a String,\r\n\t        // e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t        // eslint-disable-next-line no-useless-escape\r\n\t        /\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t        function (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t          var prop =\r\n\t            dotProp ||\r\n\t            singleQuoteProp ||\r\n\t            doubleQuoteProp ||\r\n\t            (arrayIndex && parseInt(arrayIndex, 10))\r\n\t          if (str && obj) {\r\n\t            obj = obj[prop]\r\n\t          }\r\n\t        }\r\n\t      )\r\n\t      return obj\r\n\t    },\r\n\r\n\t    getDataProperty: function (obj, property) {\r\n\t      var key\r\n\t      var prop\r\n\t      if (obj.dataset) {\r\n\t        key = property.replace(/-([a-z])/g, function (_, b) {\r\n\t          return b.toUpperCase()\r\n\t        })\r\n\t        prop = obj.dataset[key]\r\n\t      } else if (obj.getAttribute) {\r\n\t        prop = obj.getAttribute(\r\n\t          'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t        )\r\n\t      }\r\n\t      if (typeof prop === 'string') {\r\n\t        // eslint-disable-next-line no-useless-escape\r\n\t        if (\r\n\t          /^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t        ) {\r\n\t          try {\r\n\t            return $.parseJSON(prop)\r\n\t          } catch (ignore) {}\r\n\t        }\r\n\t        return prop\r\n\t      }\r\n\t    },\r\n\r\n\t    getItemProperty: function (obj, property) {\r\n\t      var prop = this.getDataProperty(obj, property)\r\n\t      if (prop === undefined) {\r\n\t        prop = obj[property]\r\n\t      }\r\n\t      if (prop === undefined) {\r\n\t        prop = this.getNestedProperty(obj, property)\r\n\t      }\r\n\t      return prop\r\n\t    }\r\n\r\n\t});\r\n\r\n\tvar ViewBase = Album.ViewBase = langx.Evented.inherit({\r\n\t    klassName : \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: 'skylarkui-album-controls',\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\r\n\t\tinit : function(album,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.album = album;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.album.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.album.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, ViewBase.prototype.options,options);\r\n\t    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t}\r\n\t});\r\n\r\n\tvar ItemFactoryBase = Album.ItemFactoryBase =  langx.Evented.inherit({\r\n\t    klassName : \"ItemFactoryBase\",\r\n\r\n\t    options : {\r\n\t      // The list object property (or data attribute) with the object type:\r\n\t      typeProperty: 'type',\r\n\t      // The list object property (or data attribute) with the object title:\r\n\t      titleProperty: 'title',\r\n\t      // The list object property (or data attribute) with the object alt text:\r\n\t      altTextProperty: 'alt',\r\n\t      // The list object property (or data attribute) with the object URL:\r\n\t      urlProperty: 'href',\r\n\t      // The list object property (or data attribute) with the object srcset URL(s):\r\n\t      srcsetProperty: 'urlset',\t    \t\r\n\t    },\r\n\r\n\t\tinit : function(album,options) {\r\n\t\t\tthis.album = album;\r\n\t\t\tthis.initOptions(options);\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, ItemFactoryBase.prototype.options,options);\r\n\t    },\r\n\r\n\r\n\t    setTimeout: function (func, args, wait) {\r\n\t      var that = this\r\n\t      return (\r\n\t        func &&\r\n\t        window.setTimeout(function () {\r\n\t          func.apply(that, args || [])\r\n\t        }, wait || 0)\r\n\t      )\r\n\t    },\t    \r\n\r\n\t    getNestedProperty: Album.getNestedProperty,\r\n\r\n\t    getDataProperty: Album.getDataProperty,\r\n\r\n\t    getItemProperty: Album.getItemProperty\r\n\t});\r\n\t\r\n\r\n\tAlbum.installPlugin = function(pointer,setting) {\r\n\t\tvar plugins = registry[pointer];\r\n\t\tif (!plugins) {\r\n\t\t\tthrow new Error(\"Invalid paramerter!\");\r\n\t\t}\r\n\r\n\t\tplugins.push(setting);\r\n\t};\r\n\r\n\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\r\n    return ui.Album = Album;\r\n})\r\n"]}