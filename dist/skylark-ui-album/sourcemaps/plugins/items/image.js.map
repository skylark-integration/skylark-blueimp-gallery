{"version":3,"sources":["plugins/items/image.js"],"names":["define","langx","noder","$","Album","ImageItemFactory","ItemFactoryBase","inherit","klassName","options","stretchImages","initOptions","this","overrided","mixin","prototype","render","obj","callback","called","element","title","altText","img","createElement","url","album","backgroundSize","getItemProperty","urlProperty","titleProperty","altTextProperty","draggable","alt","on","callbackWrapper","event","type","target","off","style","background","src","pluginInfo","name","mimeType","ctor","installPlugin"],"mappings":";;;;;;;AAAAA,QACC,sBACA,0BACA,0BACA,eACE,SAAUC,EAAOC,EAAOC,EAAGC,GAC7B,IAAIC,EAAmBD,EAAME,gBAAgBC,SAC5CC,UAAW,mBACXC,SAMCC,eAAe,GAGhBC,YAAa,SAAUF,GACtBG,KAAKC,YACLD,KAAKH,QAAUR,EAAMa,MAAMF,KAAKH,QAASJ,EAAiBU,UAAUN,QAASA,IAG9EO,OAAQ,SAAUC,EAAKC,GACtB,IAKCC,EACAC,EACAC,EACAC,EAPAC,EAAMrB,EAAMsB,cAAc,OAE1BC,GADQb,KAAKc,MACPT,GACNU,EAAiBf,KAAKH,QAAQC,cA+C/B,MAvBmB,iBAARe,IACVA,EAAMb,KAAKgB,gBAAgBX,EAAKL,KAAKH,QAAQoB,aAC7CR,EAAQT,KAAKgB,gBAAgBX,EAAKL,KAAKH,QAAQqB,eAC/CR,EACCV,KAAKgB,gBAAgBX,EAAKL,KAAKH,QAAQsB,kBAAoBV,IAEtC,IAAnBM,IACHA,EAAiB,WAEdA,EACHP,EAAUlB,EAAMsB,cAAc,QAE9BJ,EAAUG,EACVA,EAAIS,WAAY,GAEbX,IACHD,EAAQC,MAAQA,GAEbC,IACHF,EAAQa,IAAMX,GAEfnB,EAAEoB,GAAKW,GAAG,aAvCV,SAASC,EAAgBC,GACnBjB,IACJiB,GACCC,KAAMD,EAAMC,KACZC,OAAQlB,GAGTD,GAAS,EACThB,EAAEoB,GAAKgB,IAAI,aAAcJ,GACrBR,GACgB,SAAfS,EAAMC,OACTjB,EAAQoB,MAAMC,WAAa,QAAUhB,EAAM,sBAC3CL,EAAQoB,MAAMb,eAAiBA,GAGjCT,EAASkB,MAyBXb,EAAImB,IAAMjB,EACHL,KAKLuB,GACHC,KAAM,QACNC,SAAU,QACVC,KAAMzC,GAKP,OAFAD,EAAM2C,cAAc,QAASJ,GAEtBA","file":"../../../plugins/items/image.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/query\",\r\n\t'../../Album',\r\n], function (langx, noder, $, Album) {\r\n\tvar ImageItemFactory = Album.ItemFactoryBase.inherit({\r\n\t\tklassName: \"ImageItemFactory\",\r\n\t\toptions: {\r\n\t\t\t// Defines if images should be stretched to fill the available space,\r\n\t\t\t// while maintaining their aspect ratio (will only be enabled for browsers\r\n\t\t\t// supporting background-size=\"contain\", which excludes IE < 9).\r\n\t\t\t// Set to \"cover\", to make images cover all available space (requires\r\n\t\t\t// support for background-size=\"cover\", which excludes IE < 9):\r\n\t\t\tstretchImages: false\r\n\t\t},\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\tthis.overrided();\r\n\t\t\tthis.options = langx.mixin(this.options, ImageItemFactory.prototype.options, options);\r\n\t\t},\r\n\r\n\t\trender: function (obj, callback) {\r\n\t\t\tvar that = this,\r\n\t\t\t\timg = noder.createElement(\"img\"),\r\n\t\t\t\talbum = this.album,\r\n\t\t\t\turl = obj,\r\n\t\t\t\tbackgroundSize = this.options.stretchImages,\r\n\t\t\t\tcalled,\r\n\t\t\t\telement,\r\n\t\t\t\ttitle,\r\n\t\t\t\taltText;\r\n\r\n\t\t\tfunction callbackWrapper(event) {\r\n\t\t\t\tif (!called) {\r\n\t\t\t\t\tevent = {\r\n\t\t\t\t\t\ttype: event.type,\r\n\t\t\t\t\t\ttarget: element\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcalled = true\r\n\t\t\t\t\t$(img).off('load error', callbackWrapper)\r\n\t\t\t\t\tif (backgroundSize) {\r\n\t\t\t\t\t\tif (event.type === 'load') {\r\n\t\t\t\t\t\t\telement.style.background = 'url(\"' + url + '\") center no-repeat'\r\n\t\t\t\t\t\t\telement.style.backgroundSize = backgroundSize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcallback(event)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeof url !== 'string') {\r\n\t\t\t\turl = this.getItemProperty(obj, this.options.urlProperty);\r\n\t\t\t\ttitle = this.getItemProperty(obj, this.options.titleProperty);\r\n\t\t\t\taltText =\r\n\t\t\t\t\tthis.getItemProperty(obj, this.options.altTextProperty) || title;\r\n\t\t\t}\r\n\t\t\tif (backgroundSize === true) {\r\n\t\t\t\tbackgroundSize = 'contain';\r\n\t\t\t}\r\n\t\t\tif (backgroundSize) {\r\n\t\t\t\telement = noder.createElement(\"div\");\r\n\t\t\t} else {\r\n\t\t\t\telement = img;\r\n\t\t\t\timg.draggable = false;\r\n\t\t\t}\r\n\t\t\tif (title) {\r\n\t\t\t\telement.title = title;\r\n\t\t\t}\r\n\t\t\tif (altText) {\r\n\t\t\t\telement.alt = altText;\r\n\t\t\t}\r\n\t\t\t$(img).on('load error', callbackWrapper);\r\n\t\t\timg.src = url\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvar pluginInfo = {\r\n\t\tname: \"image\",\r\n\t\tmimeType: \"image\",\r\n\t\tctor: ImageItemFactory\r\n\t};\r\n\r\n\tAlbum.installPlugin(\"items\", pluginInfo);\r\n\r\n\treturn pluginInfo;\r\n\r\n});"]}