{"version":3,"sources":["plugins/items/image.js"],"names":["define","langx","noder","$","Album","ImageItemFactory","ItemFactoryBase","inherit","klassName","options","stretchImages","initOptions","this","overrided","mixin","prototype","render","obj","callback","callbackWrapper","event","called","type","target","element","img","off","backgroundSize","style","background","url","title","altText","createElement","album","getItemProperty","urlProperty","titleProperty","altTextProperty","draggable","alt","on","src","pluginInfo","name","mimeType","ctor","installPlugin"],"mappings":";;;;;;;AAAAA,QACE,sBACA,sBACA,sBACA,eACA,SAASC,EAAMC,EAAOC,EAAEC,GAEzB,GAAIC,GAAmBD,EAAME,gBAAgBC,SAC5CC,UAAY,mBACTC,SAMEC,eAAe,GAGpBC,YAAc,SAASF,GACtBG,KAAKC,YACLD,KAAKH,QAAUR,EAAMa,MAAMF,KAAKH,QAAQJ,EAAiBU,UAAUN,QAAQA,IAGzEO,OAAS,SAAUC,EAAKC,GAWtB,QAASC,GAAiBC,GACnBC,IACHD,GACEE,KAAMF,EAAME,KACZC,OAAQC,GAGVH,GAAS,EACTlB,EAAEsB,GAAKC,IAAI,aAAcP,GACrBQ,GACiB,SAAfP,EAAME,OACRE,EAAQI,MAAMC,WAAa,QAAUC,EAAM,sBAC3CN,EAAQI,MAAMD,eAAiBA,GAGnCT,EAASE,IAzBb,GAKIC,GACAG,EACAO,EACAC,EAPDP,EAAMvB,EAAM+B,cAAc,OAE1BH,GADQlB,KAAKsB,MACPjB,GACNU,EAAiBf,KAAKH,QAAQC,aA+CjC,OAvBmB,gBAARoB,KACTA,EAAMlB,KAAKuB,gBAAgBlB,EAAKL,KAAKH,QAAQ2B,aAC7CL,EAAQnB,KAAKuB,gBAAgBlB,EAAKL,KAAKH,QAAQ4B,eAC/CL,EACEpB,KAAKuB,gBAAgBlB,EAAKL,KAAKH,QAAQ6B,kBAAoBP,GAE3DJ,KAAmB,IACrBA,EAAiB,WAEfA,EACFH,EAAUtB,EAAM+B,cAAc,QAE9BT,EAAUC,EACVA,EAAIc,WAAY,GAEdR,IACFP,EAAQO,MAAQA,GAEdC,IACFR,EAAQgB,IAAMR,GAEhB7B,EAAEsB,GAAKgB,GAAG,aAActB,GACxBM,EAAIiB,IAAMZ,EACHN,KAKTmB,GACHC,KAAO,QACPC,SAAW,QACXC,KAAQzC,EAKT,OAFAD,GAAM2C,cAAc,QAAQJ,GAErBA","file":"../../../plugins/items/image.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/query\",\r\n  '../../Album',\r\n],function(langx,noder, $,Album) {\r\n\r\n\tvar ImageItemFactory = Album.ItemFactoryBase.inherit({\r\n\t\tklassName : \"ImageItemFactory\",\r\n\t    options : {\r\n\t      // Defines if images should be stretched to fill the available space,\r\n\t      // while maintaining their aspect ratio (will only be enabled for browsers\r\n\t      // supporting background-size=\"contain\", which excludes IE < 9).\r\n\t      // Set to \"cover\", to make images cover all available space (requires\r\n\t      // support for background-size=\"cover\", which excludes IE < 9):\r\n\t      stretchImages: false\r\n\t    },\r\n\r\n\t\tinitOptions : function(options) {\r\n\t\t\tthis.overrided();\r\n\t\t\tthis.options = langx.mixin(this.options,ImageItemFactory.prototype.options,options);\r\n\t\t},\r\n\r\n\t    render : function (obj, callback) {\r\n\t      var that = this,\r\n\t      \t  img = noder.createElement(\"img\"),\r\n\t      \t  album = this.album,\r\n\t      \t  url = obj,\r\n\t      \t  backgroundSize = this.options.stretchImages,\r\n\t          called,\r\n\t          element,\r\n\t          title,\r\n\t          altText;\r\n\r\n\t      function callbackWrapper (event) {\r\n\t        if (!called) {\r\n\t          event = {\r\n\t            type: event.type,\r\n\t            target: element\r\n\t          }\r\n\r\n\t          called = true\r\n\t          $(img).off('load error', callbackWrapper)\r\n\t          if (backgroundSize) {\r\n\t            if (event.type === 'load') {\r\n\t              element.style.background = 'url(\"' + url + '\") center no-repeat'\r\n\t              element.style.backgroundSize = backgroundSize\r\n\t            }\r\n\t          }\r\n\t          callback(event)\r\n\t        }\r\n\t      }\r\n\t      if (typeof url !== 'string') {\r\n\t        url = this.getItemProperty(obj, this.options.urlProperty);\r\n\t        title = this.getItemProperty(obj, this.options.titleProperty);\r\n\t        altText =\r\n\t          this.getItemProperty(obj, this.options.altTextProperty) || title;\r\n\t      }\r\n\t      if (backgroundSize === true) {\r\n\t        backgroundSize = 'contain';\r\n\t      }\r\n\t      if (backgroundSize) {\r\n\t        element = noder.createElement(\"div\");\r\n\t      } else {\r\n\t        element = img;\r\n\t        img.draggable = false;\r\n\t      }\r\n\t      if (title) {\r\n\t        element.title = title;\r\n\t      }\r\n\t      if (altText) {\r\n\t        element.alt = altText;\r\n\t      }\r\n\t      $(img).on('load error', callbackWrapper);\r\n\t      img.src = url\r\n\t      return element;\r\n\t    }\r\n\r\n\t});\r\n\r\n\tvar pluginInfo = {\r\n\t\tname : \"image\",\r\n\t\tmimeType : \"image\", \r\n\t\tctor :  ImageItemFactory\r\n  \t};\r\n\r\n\tAlbum.installPlugin(\"items\",pluginInfo);\r\n\r\n\treturn pluginInfo;\r\n\t\r\n});"]}