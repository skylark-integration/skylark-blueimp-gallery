{"version":3,"sources":["plugins/items/youtube.js"],"names":["define","langx","noder","$","Album","video","YouTubePlayer","Evented","inherit","klassName","init","videoId","playerVars","clickToPlay","this","element","document","createElement","canPlayType","loadAPI","scriptTag","that","onYouTubeIframeAPIReady","window","apiUrl","scriptTags","getElementsByTagName","i","length","apply","playOnReady","play","src","parentNode","insertBefore","onReady","ready","onPlaying","playStatus","listeners","playing","onPause","Gallery","prototype","setTimeout","call","checkSeek","stateChange","YT","PlayerState","PAUSED","ENDED","pause","onStateChange","event","data","PLAYING","hasPlayed","onError","trigger","navigator","test","platform","player","playVideo","Player","events","pauseVideo","YouTubeItemFactory","ctor","options","youTubeVideoIdProperty","youTubePlayerVars","wmode","youTubeClickToPlay","initOptions","overrided","mixin","render","obj","callback","getItemProperty","undefined","urlProperty","videoPosterProperty","pluginInfo","name","mimeType","installPlugin"],"mappings":"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","file":"../../../plugins/items/youtube.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/query\",\r\n  '../../Album',\r\n  './video'\r\n],function(langx,noder, $,Album,video) {\r\n  'use strict'\r\n\r\n  var YouTubePlayer = langx.Evented.inherit({\r\n    klassName : \"YouTubePlayer\",\r\n\r\n    init : function (videoId, playerVars, clickToPlay) {\r\n      this.videoId = videoId;\r\n      this.playerVars = playerVars;\r\n      this.clickToPlay = clickToPlay;\r\n      this.element = document.createElement('div');\r\n    },\r\n\r\n    canPlayType: function () {\r\n      return true;\r\n    },\r\n\r\n    loadAPI: function () {\r\n      var that = this,\r\n          onYouTubeIframeAPIReady = window.onYouTubeIframeAPIReady,\r\n          apiUrl = 'https://www.youtube.com/iframe_api',\r\n          scriptTags = document.getElementsByTagName('script'),\r\n          i = scriptTags.length,\r\n          scriptTag;\r\n\r\n      window.onYouTubeIframeAPIReady = function () {\r\n        if (onYouTubeIframeAPIReady) {\r\n          onYouTubeIframeAPIReady.apply(this);\r\n        }\r\n        if (that.playOnReady) {\r\n          that.play();\r\n        }\r\n      }\r\n      while (i) {\r\n        i -= 1\r\n        if (scriptTags[i].src === apiUrl) {\r\n          return\r\n        }\r\n      }\r\n      scriptTag = document.createElement('script')\r\n      scriptTag.src = apiUrl\r\n      scriptTags[0].parentNode.insertBefore(scriptTag, scriptTags[0])\r\n    },\r\n\r\n    onReady: function () {\r\n      this.ready = true;\r\n      if (this.playOnReady) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    onPlaying: function () {\r\n      if (this.playStatus < 2) {\r\n        this.listeners.playing();\r\n        this.playStatus = 2;\r\n      }\r\n    },\r\n\r\n    onPause: function () {\r\n      Gallery.prototype.setTimeout.call(this, this.checkSeek, null, 2000)\r\n    },\r\n\r\n    checkSeek: function () {\r\n      if (\r\n        this.stateChange === YT.PlayerState.PAUSED ||\r\n        this.stateChange === YT.PlayerState.ENDED\r\n      ) {\r\n        // check if current state change is actually paused\r\n        this.listeners.pause()\r\n        delete this.playStatus\r\n      }\r\n    },\r\n\r\n    onStateChange: function (event) {\r\n      switch (event.data) {\r\n        case YT.PlayerState.PLAYING:\r\n          this.hasPlayed = true\r\n          this.onPlaying()\r\n          break\r\n        case YT.PlayerState.PAUSED:\r\n        case YT.PlayerState.ENDED:\r\n          this.onPause()\r\n          break\r\n      }\r\n      // Save most recent state change to this.stateChange\r\n      this.stateChange = event.data\r\n    },\r\n\r\n    onError: function (event) {\r\n      this.trigger(\"error\",event);\r\n    },\r\n\r\n    play: function () {\r\n      var that = this\r\n      if (!this.playStatus) {\r\n        this.listeners.play();\r\n        this.playStatus = 1;\r\n      }\r\n      if (this.ready) {\r\n        if (\r\n          !this.hasPlayed &&\r\n          (this.clickToPlay ||\r\n            (window.navigator &&\r\n              /iP(hone|od|ad)/.test(window.navigator.platform)))\r\n        ) {\r\n          // Manually trigger the playing callback if clickToPlay\r\n          // is enabled and to workaround a limitation in iOS,\r\n          // which requires synchronous user interaction to start\r\n          // the video playback:\r\n          this.onPlaying();\r\n        } else {\r\n          this.player.playVideo();\r\n        }\r\n      } else {\r\n        this.playOnReady = true;\r\n        if (!(window.YT && YT.Player)) {\r\n          this.loadAPI();\r\n        } else if (!this.player) {\r\n          this.player = new YT.Player(this.element, {\r\n            videoId: this.videoId,\r\n            playerVars: this.playerVars,\r\n            events: {\r\n              onReady: function () {\r\n                that.onReady()\r\n              },\r\n              onStateChange: function (event) {\r\n                that.onStateChange(event)\r\n              },\r\n              onError: function (event) {\r\n                that.onError(event)\r\n              }\r\n            }\r\n          })\r\n        }\r\n      }\r\n    },\r\n\r\n    pause: function () {\r\n      if (this.ready) {\r\n        this.player.pauseVideo()\r\n      } else if (this.playStatus) {\r\n        delete this.playOnReady\r\n        this.listeners.pause()\r\n        delete this.playStatus\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  var YouTubeItemFactory = video.ctor.inherit({\r\n    klassName : \"YouTubeItemFactory\",\r\n\r\n    YouTubePlayer: YouTubePlayer,\r\n    \r\n    options : {\r\n      // The list object property (or data attribute) with the YouTube video id:\r\n      youTubeVideoIdProperty: 'youtube',\r\n      // Optional object with parameters passed to the YouTube video player:\r\n      // https://developers.google.com/youtube/player_parameters\r\n      youTubePlayerVars: {\r\n        wmode: 'transparent'\r\n      },\r\n      // Require a click on the native YouTube player for the initial playback:\r\n      youTubeClickToPlay: true\r\n    },\r\n\r\n    initOptions : function(options) {\r\n      this.overrided();\r\n      this.options = langx.mixin(this.options,YouTubeItemFactory.prototype.options,options);\r\n    },\r\n\r\n    render : function (obj, callback) {\r\n      var options = this.options\r\n      var videoId = this.getItemProperty(obj, options.youTubeVideoIdProperty)\r\n      if (videoId) {\r\n        if (this.getItemProperty(obj, options.urlProperty) === undefined) {\r\n          obj[options.urlProperty] = '//www.youtube.com/watch?v=' + videoId\r\n        }\r\n        if (\r\n          this.getItemProperty(obj, options.videoPosterProperty) === undefined\r\n        ) {\r\n          obj[options.videoPosterProperty] =\r\n            '//img.youtube.com/vi/' + videoId + '/maxresdefault.jpg'\r\n        }\r\n        return this.overrided(\r\n          obj,\r\n          callback,\r\n          new YouTubePlayer(\r\n            videoId,\r\n            options.youTubePlayerVars,\r\n            options.youTubeClickToPlay\r\n          )\r\n        )\r\n      }\r\n    }\r\n  });\r\n\r\n  var pluginInfo = {\r\n    name : \"youtube\",\r\n    mimeType : \"youtube\", \r\n    ctor :  YouTubeItemFactory\r\n    };\r\n\r\n  Album.installPlugin(\"items\",pluginInfo);\r\n\r\n  return pluginInfo;\r\n});\r\n"]}