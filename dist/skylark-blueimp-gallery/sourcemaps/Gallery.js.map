{"version":3,"sources":["Gallery.js"],"names":["define","skylark","langx","noder","Widget","registry","views","items","Gallery","inherit","klassName","pluginName","options","typeProperty","titleProperty","altTextProperty","urlProperty","srcsetProperty","_init","this","$el","_elm","el","_itemFactories","setViewMode","view","mode","viewMode","i","length","name","ctor","getItemUrl","item","getItemProperty","getItemTitle","addItems","concat","Array","prototype","slice","call","num","trigger","renderItem","callback","type","split","factory","mimeType","Error","element","render","srcset","setAttribute","isRunnable","playItem","mixin","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","prop","parseInt","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","$","parseJSON","ignore","undefined","ViewBase","Evented","controlsClass","fullScreen","init","gallery","hasControls","that","initOptions","container","on","e","hasClass","removeClass","addClass","close","ItemFactoryBase","setTimeout","func","args","wait","window","apply","installPlugin","pointer","setting","plugins","push","itg","blueimp"],"mappings":"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","file":"../Gallery.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/noder\",\r\n  \t\"skylark-ui-swt/Widget\",\r\n], function (skylark, langx, noder, Widget) {\r\n\tvar registry = {\r\n\t\tviews: [],\r\n\t\titems: []\r\n\t};\r\n\tvar Gallery = Widget.inherit({\r\n\t\tklassName: \"Gallery\",\r\n\t    pluginName : \"blueimp.gallery\",\r\n\r\n\t\toptions: {\r\n\t\t\t// The list object property (or data attribute) with the object type:\r\n\t\t\ttypeProperty: 'type',\r\n\t\t\t// The list object property (or data attribute) with the object title:\r\n\t\t\ttitleProperty: 'title',\r\n\t\t\t// The list object property (or data attribute) with the object alt text:\r\n\t\t\taltTextProperty: 'alt',\r\n\t\t\t// The list object property (or data attribute) with the object URL:\r\n\t\t\turlProperty: 'href',\r\n\t\t\t// The list object property (or data attribute) with the object srcset URL(s):\r\n\t\t\tsrcsetProperty: 'urlset',\r\n\t\t},\r\n\t\t\r\n\t\t/*\r\n\t\t * @param {Element} el The container element. \r\n\t\t */\r\n\t\t//init: function (el, options) {\r\n\t\t_init : function() {\r\n\t\t\t//this.overrided(el,options);\t\r\n\t\t\tthis.$el = this._elm; // $(el);\r\n\t\t\tthis.el = this.$el[0];\r\n\t\t\t//this.options = langx.mixin({}, Gallery.prototype.options, options);\r\n\t\t\tthis._itemFactories = {\r\n\r\n\t\t\t};\r\n\t\t\tthis.items = this.options.items;\r\n\t\t\tthis.setViewMode(this.options.view.mode, this.options.view.options);\r\n\t\t},\r\n\r\n\t\tsetViewMode: function (mode, options) {\r\n\t\t\tthis.viewMode = mode;\r\n\t\t\tfor (var i = 0; i < registry.views.length; i++) {\r\n\t\t\t\tif (registry.views[i].name === mode) {\r\n\t\t\t\t\tthis.view = new registry.views[i].ctor(this, options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemUrl: function (item) {\r\n\t\t\treturn Gallery.getItemProperty(item, this.options.urlProperty);\r\n\t\t},\r\n\r\n\t\tgetItemTitle: function (item) {\r\n\t\t\treturn Gallery.getItemProperty(item, this.options.titleProperty);\r\n\t\t},\r\n\r\n\t\taddItems: function (items) {\r\n\t\t\tvar i\r\n\t\t\tif (!items.concat) {\r\n\t\t\t\t// Make a real array out of the items to add:\r\n\t\t\t\titems = Array.prototype.slice.call(items);\r\n\t\t\t}\r\n\t\t\tif (!this.items.concat) {\r\n\t\t\t\t// Make a real array out of the Gallery items:\r\n\t\t\t\tthis.items = Array.prototype.slice.call(this.items);\r\n\t\t\t}\r\n\t\t\tthis.items = this.items.concat(items);\r\n\t\t\tthis.num = this.items.length;\r\n\t\t\tthis.trigger(\"itemsChanged\");\r\n\t\t},\r\n\r\n\t\trenderItem: function (item, callback) {\r\n\t\t\tvar type = item && Gallery.getItemProperty(item, this.options.typeProperty);\r\n\r\n\t\t\tif (type) {\r\n\t\t\t\ttype = type.split('/')[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (!type) {\r\n\t\t\t\t//throw new Error(\"no type \");\r\n\t\t\t\ttype = \"image\";\r\n\t\t\t}\r\n\r\n\t\t\tvar factory = this._itemFactories[type];\r\n\r\n\t\t\tif (!factory) {\r\n\t\t\t\tfor (var i = 0; i < registry.items.length; i++) {\r\n\t\t\t\t\tif (registry.items[i].mimeType === type) {\r\n\t\t\t\t\t\tfactory = this._itemFactories[type] = new registry.items[i].ctor(this);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!factory) {\r\n\t\t\t\tthrow new Error(\"invalid type:\" + type);\r\n\t\t\t}\r\n\r\n\t\t\tvar element = factory.render(item, callback);\r\n\t\t\tvar srcset = Gallery.getItemProperty(item, this.options.srcsetProperty)\r\n\t\t\tif (srcset) {\r\n\t\t\t\telement.setAttribute('srcset', srcset)\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t * Check whether a item is runnable.\r\n\t\t * @param {Object} item The item object\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tisRunnable: function (item) {\r\n\r\n\t\t},\r\n\r\n\t\tplayItem: function (item) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tlangx.mixin(Gallery, {\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tvar ViewBase = Gallery.ViewBase = langx.Evented.inherit({\r\n\t\tklassName: \"ViewBase\",\r\n\r\n\t\toptions: {\r\n\t\t\t// The class to add when the gallery controls are visible:\r\n\t\t\tcontrolsClass: 'skylark-blueimp-gallery-controls',\r\n\t\t\t// Defines if the gallery should open in fullscreen mode:\r\n\t\t\tfullScreen: false\r\n\r\n\t\t},\r\n\r\n\t\tinit: function (gallery, options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.gallery = gallery;\r\n\t\t\tthis.initOptions(options);\r\n\t\t\tif (this.options.fullScreen) {\r\n\t\t\t\tnoder.fullScreen(this.container[0]);\r\n\t\t\t}\r\n\t\t\tthis.gallery.on(\"item.running\", function (e) {\r\n\t\t\t\tif (that.container.hasClass(that.options.controlsClass)) {\r\n\t\t\t\t\thasControls = true\r\n\t\t\t\t\tthat.container.removeClass(that.options.controlsClass);\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasControls = false\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.gallery.on(\"item.running\", function (e) {\r\n\t\t\t\tif (hasControls) {\r\n\t\t\t\t\tthat.container.addClass(that.options.controlsClass);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\t// Create a copy of the prototype options:\r\n\t\t\tthis.options = langx.mixin({}, ViewBase.prototype.options, options);\r\n\t\t},\r\n\r\n\t\tclose: function () {\r\n\t\t\tif (noder.fullScreen() === this.container[0]) {\r\n\t\t\t\tnoder.fullScreen(false);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar ItemFactoryBase = Gallery.ItemFactoryBase = langx.Evented.inherit({\r\n\t\tklassName: \"ItemFactoryBase\",\r\n\r\n\t\toptions: {\r\n\t\t\t// The list object property (or data attribute) with the object type:\r\n\t\t\ttypeProperty: 'type',\r\n\t\t\t// The list object property (or data attribute) with the object title:\r\n\t\t\ttitleProperty: 'title',\r\n\t\t\t// The list object property (or data attribute) with the object alt text:\r\n\t\t\taltTextProperty: 'alt',\r\n\t\t\t// The list object property (or data attribute) with the object URL:\r\n\t\t\turlProperty: 'href',\r\n\t\t\t// The list object property (or data attribute) with the object srcset URL(s):\r\n\t\t\tsrcsetProperty: 'urlset',\r\n\t\t},\r\n\r\n\t\tinit: function (gallery, options) {\r\n\t\t\tthis.gallery = gallery;\r\n\t\t\tthis.initOptions(options);\r\n\t\t},\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\t// Create a copy of the prototype options:\r\n\t\t\tthis.options = langx.mixin({}, ItemFactoryBase.prototype.options, options);\r\n\t\t},\r\n\r\n\t\tsetTimeout: function (func, args, wait) {\r\n\t\t\tvar that = this\r\n\t\t\treturn (\r\n\t\t\t\tfunc &&\r\n\t\t\t\twindow.setTimeout(function () {\r\n\t\t\t\t\tfunc.apply(that, args || [])\r\n\t\t\t\t}, wait || 0)\r\n\t\t\t)\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: Gallery.getNestedProperty,\r\n\r\n\t\tgetDataProperty: Gallery.getDataProperty,\r\n\r\n\t\tgetItemProperty: Gallery.getItemProperty\r\n\t});\r\n\r\n\tGallery.installPlugin = function (pointer, setting) {\r\n\t\tvar plugins = registry[pointer];\r\n\t\tif (!plugins) {\r\n\t\t\tthrow new Error(\"Invalid paramerter!\");\r\n\t\t}\r\n\t\tplugins.push(setting);\r\n\t};\r\n\r\n\tskylark.itg = skylark.itg || {};\r\n\tskylark.itg.blueimp = skylark.itg.blueimp || {};\r\n\treturn skylark.itg.blueimp.Gallery = Gallery;\r\n});"]}