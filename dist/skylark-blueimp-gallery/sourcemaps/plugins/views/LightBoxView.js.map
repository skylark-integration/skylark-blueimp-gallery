{"version":3,"sources":["plugins/views/LightBoxView.js"],"names":["define","langx","Gallery","SliderView","LightBoxView","inherit","klassName","options","hidePageScrollbars","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","initOptions","mixin","prototype","this","overrided","createIndicator","obj","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","cloneNode","title","getItemTitle","getItemProperty","undefined","getElementsByTagName","$","find","src","style","backgroundImage","addIndicator","index","length","list","setAttribute","appendChild","indicators","push","setActiveIndicator","activeIndicator","removeClass","addClass","initSlides","reload","container","document","createElement","children","addSlide","resetSlides","empty","handleClick","event","target","srcElement","parent","parentNode","preventDefault","slide","getNodeIndex","handleSlide","handleClose","installPlugin","name","ctor","templates","default"],"mappings":";;;;;;;AAAAA,QACC,sBACA,gBACA,gBACE,SAAUC,EAAOC,EAASC,GAE5B,IAAIC,EAAeD,EAAWE,SAC7BC,UAAW,eACXC,SAECC,oBAAoB,EAGpBC,mBAAoB,KAEpBC,qBAAsB,SAGtBC,kBAAmB,YAEnBC,qBAAqB,GAItBC,YAAa,SAAUN,GAClBA,EAAUN,EAAMa,SAAUV,EAAaW,UAAUR,QAASA,GAC9DS,KAAKC,UAAUV,IAGhBW,gBAAiB,SAAUC,GAC1B,IAIIC,EACAC,EALAC,EAAUN,KAAKM,QAClBC,EAAYP,KAAKQ,mBAAmBC,WAAU,GAC3CC,EAAQJ,EAAQK,aAAaR,GAC7BR,EAAoBK,KAAKT,QAAQI,kBAoBrC,OAjBIK,KAAKT,QAAQK,sBACZD,IACHS,EAAelB,EAAQ0B,gBAAgBT,EAAKR,SAExBkB,IAAjBT,IACHC,EAAYF,EAAIW,sBAAwBC,EAAEZ,GAAKa,KAAK,OAAO,MAE1DZ,EAAeC,EAAUY,KAGvBb,IACHG,EAAUW,MAAMC,gBAAkB,QAAUf,EAAe,OAGzDM,IACHH,EAAUG,MAAQA,GAEZH,GAGRa,aAAc,SAAUC,GACvB,GAAIrB,KAAKP,mBAAmB6B,OAAQ,CACnC,IAAIf,EAAYP,KAAKE,gBAAgBF,KAAKuB,KAAKF,IAC/Cd,EAAUiB,aAAa,aAAcH,GACrCrB,KAAKP,mBAAmB,GAAGgC,YAAYlB,GACvCP,KAAK0B,WAAWC,KAAKpB,KAIvBqB,mBAAoB,SAAUP,GACzBrB,KAAK0B,aACJ1B,KAAK6B,iBACR7B,KAAK6B,gBAAgBC,YAAY9B,KAAKT,QAAQG,sBAE/CM,KAAK6B,gBAAkBd,EAAEf,KAAK0B,WAAWL,IACzCrB,KAAK6B,gBAAgBE,SAAS/B,KAAKT,QAAQG,wBAI7CsC,WAAY,SAAUC,GAChBA,IACJjC,KAAKP,mBAAqBO,KAAKkC,UAAUlB,KACxChB,KAAKT,QAAQE,oBAEVO,KAAKP,mBAAmB6B,SAC3BtB,KAAKQ,mBAAqB2B,SAASC,cAAc,MACjDpC,KAAK0B,WAAa1B,KAAKP,mBAAmB,GAAG4C,WAG/CrC,KAAKC,UAAUgC,IAGhBK,SAAU,SAAUjB,GACnBrB,KAAKC,UAAUoB,GACfrB,KAAKoB,aAAaC,IAGnBkB,YAAa,WACZvC,KAAKC,YACLD,KAAKP,mBAAmB+C,QACxBxC,KAAK0B,eAGNe,YAAa,SAAUC,GACtB,IAAIC,EAASD,EAAMC,QAAUD,EAAME,WAC/BC,EAASF,EAAOG,WACpB,GAAID,IAAW7C,KAAKP,mBAAmB,GAEtCO,KAAK+C,eAAeL,GACpB1C,KAAKgD,MAAMhD,KAAKiD,aAAaN,QACvB,CAAA,GAAIE,EAAOC,aAAe9C,KAAKP,mBAAmB,GAKxD,OAAOO,KAAKC,UAAUyC,GAHtB1C,KAAK+C,eAAeL,GACpB1C,KAAKgD,MAAMhD,KAAKiD,aAAaJ,MAM/BK,YAAa,SAAU7B,GACtBrB,KAAKC,UAAUoB,GACfrB,KAAK4B,mBAAmBP,IAGzB8B,YAAa,WACRnD,KAAK6B,iBACR7B,KAAK6B,gBAAgBC,YAAY9B,KAAKT,QAAQG,sBAE/CM,KAAKC,eAkBP,OAbAf,EAAQkE,cAAc,SACrBC,KAAQ,WACRC,KAAQlE,EACRmE,WACCC,QAAW,kJASNpE","file":"../../../plugins/views/LightBoxView.js","sourcesContent":["define([\r\n\t'skylark-langx/langx',\r\n\t'../../Gallery',\r\n\t'./SliderView'\r\n], function (langx, Gallery, SliderView) {\r\n\r\n\tvar LightBoxView = SliderView.inherit({\r\n\t\tklassName: \"LightBoxView\",\r\n\t\toptions: {\r\n\t\t\t// Hide the page scrollbars:\r\n\t\t\thidePageScrollbars: false,\r\n\r\n\t\t\t// The tag name, Id, element or querySelector of the indicator container:\r\n\t\t\tindicatorContainer: 'ol',\r\n\t\t\t// The class for the active indicator:\r\n\t\t\tactiveIndicatorClass: 'active',\r\n\t\t\t// The list object property (or data attribute) with the thumbnail URL,\r\n\t\t\t// used as alternative to a thumbnail child element:\r\n\t\t\tthumbnailProperty: 'thumbnail',\r\n\t\t\t// Defines if the gallery indicators should display a thumbnail:\r\n\t\t\tthumbnailIndicators: true\r\n\t\t},\r\n\r\n\r\n\t\tinitOptions: function (options) {\r\n\t\t\tvar options = langx.mixin({}, LightBoxView.prototype.options, options);\r\n\t\t\tthis.overrided(options);\r\n\t\t},\r\n\r\n\t\tcreateIndicator: function (obj) {\r\n\t\t\tvar gallery = this.gallery,\r\n\t\t\t\tindicator = this.indicatorPrototype.cloneNode(false)\r\n\t\t\tvar title = gallery.getItemTitle(obj)\r\n\t\t\tvar thumbnailProperty = this.options.thumbnailProperty\r\n\t\t\tvar thumbnailUrl\r\n\t\t\tvar thumbnail\r\n\t\t\tif (this.options.thumbnailIndicators) {\r\n\t\t\t\tif (thumbnailProperty) {\r\n\t\t\t\t\tthumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n\t\t\t\t}\r\n\t\t\t\tif (thumbnailUrl === undefined) {\r\n\t\t\t\t\tthumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n\t\t\t\t\tif (thumbnail) {\r\n\t\t\t\t\t\tthumbnailUrl = thumbnail.src\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (thumbnailUrl) {\r\n\t\t\t\t\tindicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (title) {\r\n\t\t\t\tindicator.title = title;\r\n\t\t\t}\r\n\t\t\treturn indicator;\r\n\t\t},\r\n\r\n\t\taddIndicator: function (index) {\r\n\t\t\tif (this.indicatorContainer.length) {\r\n\t\t\t\tvar indicator = this.createIndicator(this.list[index])\r\n\t\t\t\tindicator.setAttribute('data-index', index)\r\n\t\t\t\tthis.indicatorContainer[0].appendChild(indicator)\r\n\t\t\t\tthis.indicators.push(indicator)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetActiveIndicator: function (index) {\r\n\t\t\tif (this.indicators) {\r\n\t\t\t\tif (this.activeIndicator) {\r\n\t\t\t\t\tthis.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t\t\t\t}\r\n\t\t\t\tthis.activeIndicator = $(this.indicators[index])\r\n\t\t\t\tthis.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitSlides: function (reload) {\r\n\t\t\tif (!reload) {\r\n\t\t\t\tthis.indicatorContainer = this.container.find(\r\n\t\t\t\t\tthis.options.indicatorContainer\r\n\t\t\t\t)\r\n\t\t\t\tif (this.indicatorContainer.length) {\r\n\t\t\t\t\tthis.indicatorPrototype = document.createElement('li')\r\n\t\t\t\t\tthis.indicators = this.indicatorContainer[0].children\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.overrided(reload);\r\n\t\t},\r\n\r\n\t\taddSlide: function (index) {\r\n\t\t\tthis.overrided(index);\r\n\t\t\tthis.addIndicator(index)\r\n\t\t},\r\n\r\n\t\tresetSlides: function () {\r\n\t\t\tthis.overrided();\r\n\t\t\tthis.indicatorContainer.empty();\r\n\t\t\tthis.indicators = [];\r\n\t\t},\r\n\r\n\t\thandleClick: function (event) {\r\n\t\t\tvar target = event.target || event.srcElement\r\n\t\t\tvar parent = target.parentNode\r\n\t\t\tif (parent === this.indicatorContainer[0]) {\r\n\t\t\t\t// Click on indicator element\r\n\t\t\t\tthis.preventDefault(event)\r\n\t\t\t\tthis.slide(this.getNodeIndex(target))\r\n\t\t\t} else if (parent.parentNode === this.indicatorContainer[0]) {\r\n\t\t\t\t// Click on indicator child element\r\n\t\t\t\tthis.preventDefault(event)\r\n\t\t\t\tthis.slide(this.getNodeIndex(parent))\r\n\t\t\t} else {\r\n\t\t\t\treturn this.overrided(event)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleSlide: function (index) {\r\n\t\t\tthis.overrided(index)\r\n\t\t\tthis.setActiveIndicator(index)\r\n\t\t},\r\n\r\n\t\thandleClose: function () {\r\n\t\t\tif (this.activeIndicator) {\r\n\t\t\t\tthis.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t\t\t}\r\n\t\t\tthis.overrided();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tGallery.installPlugin(\"views\", {\r\n\t\t\"name\": \"lightbox\",\r\n\t\t\"ctor\": LightBoxView,\r\n\t\t\"templates\": {\r\n\t\t\t\"default\": '<div class=\"slides\"></div>' +\r\n\t\t\t\t'<h3 class=\"title\"></h3>' +\r\n\t\t\t\t'<a class=\"prev\">‹</a>' +\r\n\t\t\t\t'<a class=\"next\">›</a>' +\r\n\t\t\t\t'<a class=\"close\">×</a>' +\r\n\t\t\t\t'<ol class=\"indicator\"></ol>'\r\n\t\t}\r\n\t});\r\n\r\n\treturn LightBoxView;\r\n\r\n});"]}